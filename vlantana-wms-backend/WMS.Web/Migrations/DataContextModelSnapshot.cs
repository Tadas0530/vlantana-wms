// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vlantana_wms_backend.Data;

#nullable disable

namespace vlantana_wms_backend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("vlantana_wms_backend.Models.Auth.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("CompanyId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserCredentialsId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("CompanyId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Auth.UserCredentials", b =>
                {
                    b.Property<int>("UserCredentialsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserCredentialsId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserCredentialsId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Credentials");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Business.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CompanyId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Business.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("OrderId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Business.Pallete", b =>
                {
                    b.Property<int>("PalleteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PalleteId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateArrived")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExported")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDefective")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PalleteId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OrderId");

                    b.ToTable("Pallete");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Business.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PalleteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PalleteId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Auth.User", b =>
                {
                    b.HasOne("vlantana_wms_backend.Models.Business.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Auth.UserCredentials", b =>
                {
                    b.HasOne("vlantana_wms_backend.Models.Auth.User", "User")
                        .WithOne("UserCredentials")
                        .HasForeignKey("vlantana_wms_backend.Models.Auth.UserCredentials", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Business.Order", b =>
                {
                    b.HasOne("vlantana_wms_backend.Models.Business.Company", "Company")
                        .WithMany("Orders")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Business.Pallete", b =>
                {
                    b.HasOne("vlantana_wms_backend.Models.Business.Company", "Company")
                        .WithMany("Palletes")
                        .HasForeignKey("CompanyId");

                    b.HasOne("vlantana_wms_backend.Models.Business.Order", "Order")
                        .WithMany("Palletes")
                        .HasForeignKey("OrderId");

                    b.Navigation("Company");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Business.Product", b =>
                {
                    b.HasOne("vlantana_wms_backend.Models.Business.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId");

                    b.HasOne("vlantana_wms_backend.Models.Business.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId");

                    b.HasOne("vlantana_wms_backend.Models.Business.Pallete", "Pallete")
                        .WithMany("Products")
                        .HasForeignKey("PalleteId");

                    b.Navigation("Company");

                    b.Navigation("Order");

                    b.Navigation("Pallete");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Auth.User", b =>
                {
                    b.Navigation("UserCredentials");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Business.Company", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Palletes");

                    b.Navigation("Products");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Business.Order", b =>
                {
                    b.Navigation("Palletes");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("vlantana_wms_backend.Models.Business.Pallete", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
